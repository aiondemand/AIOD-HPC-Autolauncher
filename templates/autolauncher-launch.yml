variables:
    LAUNCH_TARGET_HOSTNAME: amdlogin.bsc.es
    LAUNCH_TARGET_USERNAME: hpai
    LAUNCH_TARGET_FOLDER: /gpfs/projects/bsc70/hpai/storage/data/tests/
    LAUNCH_TARGET_SSH_KEY: some_file
    LAUNCH_TARGET_SRC_DIR: src/
    LAUNCH_IMAGE_NAME: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}
    LAUNCH_CONFIG_PATH: configs/config.json
    KNOWN_HOSTS_FILE: some_file
    SINGULARITY_VERSION: 3.6.4
    LAUNCH_VERSION: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}
    LAUNCH_DESTINATION: ${LAUNCH_TARGET_USERNAME}@${LAUNCH_TARGET_HOSTNAME}
    JOB_WORKDIR: ${LAUNCH_TARGET_FOLDER}/jobs/${LAUNCH_VERSION}
    TAGS: estufa # mininostrum, estufa or pepino


launch_amd:
  image: ci.atalaya.at/containers/docker:stable
  stage: launch
  variables:
    LAUNCH_TARGET_HOSTNAME: amdlogin.bsc.es
  script:
    - 'echo "Target server: ${LAUNCH_TARGET_USERNAME}@${LAUNCH_TARGET_HOSTNAME}"'
    - 'echo "SSH key path: ${LAUNCH_TARGET_SSH_KEY}"'
    - time apk add openssh-client rsync
    - mkdir -p ~/.ssh/
    - cp ${KNOWN_HOSTS_FILE} ~/.ssh/known_hosts
    - cp ${LAUNCH_TARGET_SSH_KEY} ~/.ssh/ssh-key
    - chmod 0600 /root/.ssh/ssh-key
    - echo "Executing command env CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} python3 ${JOB_WORKDIR}/autolauncher.py --command ${command} --cluster amd --project ${CI_PROJECT_NAME} --file ${JOB_WORKDIR}/${LAUNCH_CONFIG_PATH} --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_TARGET_FOLDER}/containers/${LAUNCH_VERSION}/ --commit ${CI_COMMIT_SHORT_SHA} --singularity-version ${SINGULARITY_VERSION}"
    - ssh -i /root/.ssh/ssh-key ${LAUNCH_DESTINATION} env MINIO_ACCESS_KEY="$MINIO_ACCESS_KEY" MINIO_SECRET_KEY="\"$MINIO_SECRET_KEY_CLEAN\"" CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} ZIP_KEY=$ZIP_KEY SSEC_KEY=$SSEC_KEY PYTHONPATH=${JOB_WORKDIR}/${LAUNCH_TARGET_SRC_DIR} 
      python3 ${JOB_WORKDIR}/autolauncher.py --project ${CI_PROJECT_NAME} --file ${JOB_WORKDIR}/${LAUNCH_CONFIG_PATH}
      --cluster amd --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_TARGET_FOLDER}/containers/${LAUNCH_VERSION}/ 
      --commit ${CI_COMMIT_SHORT_SHA} --singularity-version ${SINGULARITY_VERSION} > autolauncher.out
    - ssh -i /root/.ssh/ssh-key ${LAUNCH_DESTINATION} ls ${JOB_WORKDIR}
    - 'rm -f /tmp/ssh-key'
  artifacts:
    paths:
      - autolauncher.out
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_TITLE =~ /^LAUNCH_AMD.*$/
    - when: never
  tags: 
    - ${TAGS}


launch_local:
  image: ci.atalaya.at/containers/docker:stable
  stage: launch
  script:
    - apk add rsync git bash python3
    - export LAUNCH_IMAGE_NAME=$(env LAUNCH_IMAGE_NAME=${LAUNCH_IMAGE_NAME} bash -c 'echo ${LAUNCH_IMAGE_NAME,,}')
    - git clone -b "${AUTOLAUNCHER_VERSION}" --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.hpai.bsc.es/hpai/autolauncher.git /tmp/autolauncher  
    - echo "Executing command env CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} python3 /tmp/autolauncher/autolauncher.py --command ${command} --cluster local --file ${LAUNCH_CONFIG_PATH}-updated --workdir ${JOB_WORKDIR} -containerdir ci.atalaya.at/${LAUNCH_IMAGE_NAME}" 
    - env MINIO_ACCESS_KEY="$MINIO_ACCESS_KEY" MINIO_SECRET_KEY="\"$MINIO_SECRET_KEY_CLEAN\"" CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} ZIP_KEY=$ZIP_KEY SSEC_KEY=$SSEC_KEY 
      python3 /tmp/autolauncher/autolauncher.py
      --cluster mini --file ${LAUNCH_CONFIG_PATH} --workdir ${JOB_WORKDIR}/
      --containerdir ci.atalaya.at/${LAUNCH_IMAGE_NAME} > job.pid
  artifacts:
    paths:
      - job.pid
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_TITLE =~ /^LAUNCH_LOCAL.*$/
    - when: never
  tags: 
    - ${TAGS}


launch_cesga:
  image: ci.atalaya.at/containers/cesga:0.0.6
  stage: launch
  script:
    - export VAULT_ADDR=https://pass.hpai.bsc.es:18200
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=$GITLAB_USER_LOGIN-read-only jwt=$CI_JOB_JWT)"
    - CESGA_USER=$(vault kv get --field=CESGA_USER secret/gitlab-ci/cesga/$GITLAB_USER_LOGIN)
    - CESGA_PASSWORD=$(vault kv get --field=CESGA_PASSWORD secret/gitlab-ci/cesga/${GITLAB_USER_LOGIN})
    - git clone -b "${AUTOLAUNCHER_VERSION}" --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.hpai.bsc.es/hpai/autolauncher.git /tmp/autolauncher
    - bash /tmp/autolauncher/utilities/cesga_vpn.sh ${CESGA_USER} ${CESGA_PASSWORD}
    - PROJECT_DIR=/mnt/lustre/scratch/nlsas/home/res/cns10/SHARE/pipelines/${CI_PROJECT_NAME}
    - JOB_WORKDIR=$PROJECT_DIR/${CI_COMMIT_SHORT_SHA}
    - LAUNCH_COMMAND=$(echo ${CI_COMMIT_TITLE} | sed -e 's/.*<\([^]]*\)>.*/\1/g')
    - echo "[Info] Job directory -> $JOB_WORKDIR" && echo "[Info] Launching file -> ${LAUNCH_COMMAND}"
    - test -f exclude_me.txt || touch exclude_me.txt
    - cat /tmp/autolauncher/utilities/exclude_me.txt >> exclude_me.txt
    - sshpass -p ${CESGA_PASSWORD} ssh -o StrictHostKeyChecking=no  ${CESGA_USER}@ft3.cesga.es "if [ ! -d ${PROJECT_DIR} ]; then mkdir -p ${PROJECT_DIR} && chmod g+w ${PROJECT_DIR}; fi && mkdir -p ${JOB_WORKDIR}/slurm_output && chmod g+w ${JOB_WORKDIR}"
    - sshpass -p ${CESGA_PASSWORD} rsync -av --exclude-from=exclude_me.txt -e "ssh -o StrictHostKeyChecking=no" * ${CESGA_USER}@ft3.cesga.es:${JOB_WORKDIR}
    - sshpass -p ${CESGA_PASSWORD} ssh -o StrictHostKeyChecking=no ${CESGA_USER}@ft3.cesga.es "export COMMIT_TAG=${CI_COMMIT_SHORT_SHA} && export USER=${CESGA_USER} && cd ${JOB_WORKDIR} && ${LAUNCH_COMMAND}" > job.info
  rules:
    - if: $CI_COMMIT_TITLE =~ /^LAUNCH_CESGA.*$/
    - when: never
  artifacts:
    paths:
      - job.info
    expire_in: 1 week
  tags: 
    - cesga