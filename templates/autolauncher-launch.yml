variables:
    LAUNCH_TARGET_HOSTNAME: amdlogin.bsc.es
    LAUNCH_TARGET_USERNAME: hpai
    LAUNCH_TARGET_FOLDER: /gpfs/projects/bsc70/hpai/storage/data/tests/
    LAUNCH_TARGET_SSH_KEY: some_file
    LAUNCH_TARGET_SRC_DIR: src/
    LAUNCH_IMAGE_NAME: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}
    LAUNCH_CONFIG_PATH: configs/config.json
    KNOWN_HOSTS_FILE: some_file
    SINGULARITY_VERSION: 3.6.4
    LAUNCH_VERSION: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}
    LAUNCH_DESTINATION: ${LAUNCH_TARGET_USERNAME}@${LAUNCH_TARGET_HOSTNAME}

launch:
  image: ci.atalaya.at/containers/docker:stable
  stage: launch
  script:
    - 'echo "Target server: ${LAUNCH_TARGET_USERNAME}@${LAUNCH_TARGET_HOSTNAME}"'
    - 'echo "SSH key path: ${LAUNCH_TARGET_SSH_KEY}"'
    - export JOB_WORKDIR=${LAUNCH_TARGET_FOLDER}/jobs/${LAUNCH_VERSION}/
    - time apk add openssh-client rsync
    - mkdir -p ~/.ssh/
    - cp ${KNOWN_HOSTS_FILE} ~/.ssh/known_hosts
    - cp ${LAUNCH_TARGET_SSH_KEY} ~/.ssh/ssh-key
    - chmod 0600 /root/.ssh/ssh-key
    - echo "Executing command env CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} PYTHONPATH=${JOB_WORKDIR}/${LAUNCH_TARGET_SRC_DIR} python ${JOB_WORKDIR}/autolauncher.py --file ${JOB_WORKDIR}/config.json --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_TARGET_FOLDER}/containers/${LAUNCH_VERSION}/ --singularity-version ${SINGULARITY_VERSION}"
    - ssh -i /root/.ssh/ssh-key ${LAUNCH_DESTINATION} env MINIO_ACCESS_KEY="$MINIO_ACCESS_KEY" MINIO_SECRET_KEY="\"$MINIO_SECRET_KEY_CLEAN\"" CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} ZIP_KEY=$ZIP_KEY SSEC_KEY=$SSEC_KEY PYTHONPATH=${JOB_WORKDIR}/${LAUNCH_TARGET_SRC_DIR} python ${JOB_WORKDIR}/autolauncher.py --file ${JOB_WORKDIR}/config.json --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_TARGET_FOLDER}/containers/${LAUNCH_VERSION}/ --singularity-version ${SINGULARITY_VERSION} > job.pid
    - 'rm -f /tmp/ssh-key'
  artifacts:
    paths:
      - job.pid
    expire_in: 1 week
  rules:
    - if: '$LAUNCH_TARGET_HOSTNAME =~ /^mini.*$/'
      when: never
    - if: '$CI_COMMIT_TITLE =~ /^LAUNCH.*$/'
    - if: '$LAUNCH == "LAUNCH"'
      when: on_success
    - when: never

launch_mini:
  image: ci.atalaya.at/containers/docker:stable
  stage: launch
  script:
    - 'echo "Target server: ${LAUNCH_TARGET_USERNAME}@${LAUNCH_TARGET_HOSTNAME}"'
    - apk add python3 bash
    - export JOB_WORKDIR=${LAUNCH_TARGET_FOLDER}/jobs/${LAUNCH_VERSION}/
    - export LAUNCH_IMAGE_NAME=$(env LAUNCH_IMAGE_NAME=${LAUNCH_IMAGE_NAME} bash -c 'echo ${LAUNCH_IMAGE_NAME,,}')
    - echo "Executing command env CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} PYTHONPATH=${JOB_WORKDIR}/${LAUNCH_TARGET_SRC_DIR} python ${JOB_WORKDIR}/autolauncher.py --file ${JOB_WORKDIR}/config.json --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_TARGET_FOLDER}/containers/${LAUNCH_VERSION}/ --singularity-version ${SINGULARITY_VERSION}" 
    - env MINIO_ACCESS_KEY="$MINIO_ACCESS_KEY" MINIO_SECRET_KEY="\"$MINIO_SECRET_KEY_CLEAN\"" CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} ZIP_KEY=$ZIP_KEY SSEC_KEY=$SSEC_KEY PYTHONPATH=${JOB_WORKDIR}/${LAUNCH_TARGET_SRC_DIR} python3 ${JOB_WORKDIR}/autolauncher.py --file ${JOB_WORKDIR}/config.json --workdir ${JOB_WORKDIR} --containerdir ${LAUNCH_IMAGE_NAME} > job.pid
  artifacts:
    paths:
      - job.pid
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TITLE =~ /^LAUNCH.*$/ && $LAUNCH_TARGET_HOSTNAME =~ /^mini.*$/'
    - if: '$LAUNCH == "LAUNCH"'
      when: on_success
    - when: never
